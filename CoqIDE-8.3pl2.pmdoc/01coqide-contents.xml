<pkg-contents spec="1.12"><f n="CoqIdE_8.3pl2.app" o="andrew" g="staff" p="16877" pt="/Users/andrew/Desktop/CoqIDE-8.3pl2-installer-src/CoqIdE_8.3pl2.app" m="false" t="file"><f n="Contents" o="andrew" g="staff" p="16877"><f n="Info.plist" o="andrew" g="staff" p="33188"/><f n="MacOS" o="andrew" g="staff" p="16877"><f n=".svn" o="andrew" g="staff" p="16877"><f n="entries" o="andrew" g="staff" p="33060"/><f n="format" o="andrew" g="staff" p="33060"/><f n="prop-base" o="andrew" g="staff" p="16877"><f n="startcoqide.svn-base" o="andrew" g="staff" p="33060"/></f><f n="props" o="andrew" g="staff" p="16877"/><f n="text-base" o="andrew" g="staff" p="16877"><f n="startcoqide.svn-base" o="andrew" g="staff" p="33060"/></f><f n="tmp" o="andrew" g="staff" p="16877"><f n="prop-base" o="andrew" g="staff" p="16877"/><f n="props" o="andrew" g="staff" p="16877"/><f n="text-base" o="andrew" g="staff" p="16877"/></f></f><f n="startcoqide" o="andrew" g="staff" p="33261"/></f><f n="Resources" o="andrew" g="staff" p="16877"><f n="bin" o="andrew" g="staff" p="16877"><f n="coq-tex" o="andrew" g="staff" p="33261"/><f n="coq_makefile" o="andrew" g="staff" p="33261"/><f n="coqc" o="andrew" g="staff" p="33261"/><f n="coqchk" o="andrew" g="staff" p="41453"/><f n="coqchk.opt" o="andrew" g="staff" p="33261"/><f n="coqdep" o="andrew" g="staff" p="33261"/><f n="coqdoc" o="andrew" g="staff" p="33261"/><f n="coqide" o="andrew" g="staff" p="41453"/><f n="coqide.opt" o="andrew" g="staff" p="33261"/><f n="coqmktop" o="andrew" g="staff" p="33261"/><f n="coqtop" o="andrew" g="staff" p="41453"/><f n="coqtop.opt" o="andrew" g="staff" p="33261"/><f n="coqwc" o="andrew" g="staff" p="33261"/><f n="gallina" o="andrew" g="staff" p="33261"/></f><f n="coqfile.icns" o="andrew" g="staff" p="33188"/><f n="coqide.icns" o="andrew" g="staff" p="33188"/><f n="gdk-pixbuf.loaders" o="andrew" g="staff" p="33188"/><f n="gtk.immodules" o="andrew" g="staff" p="33188"/><f n="immodules" o="andrew" g="staff" p="16877"><f n="im-am-et.so" o="andrew" g="staff" p="33261"/><f n="im-cedilla.so" o="andrew" g="staff" p="33261"/><f n="im-cyrillic-translit.so" o="andrew" g="staff" p="33261"/><f n="im-inuktitut.so" o="andrew" g="staff" p="33261"/><f n="im-ipa.so" o="andrew" g="staff" p="33261"/><f n="im-multipress.so" o="andrew" g="staff" p="33261"/><f n="im-thai.so" o="andrew" g="staff" p="33261"/><f n="im-ti-er.so" o="andrew" g="staff" p="33261"/><f n="im-ti-et.so" o="andrew" g="staff" p="33261"/><f n="im-viqr.so" o="andrew" g="staff" p="33261"/></f><f n="lib" o="andrew" g="staff" p="16877"><f n="coq" o="andrew" g="staff" p="16877"><f n="config" o="andrew" g="staff" p="16877"><f n="coq_config.cmi" o="andrew" g="staff" p="33188"/><f n="coq_config.cmo" o="andrew" g="staff" p="33188"/><f n="coq_config.cmx" o="andrew" g="staff" p="33188"/><f n="coq_config.o" o="andrew" g="staff" p="33188"/></f><f n="dllcoqrun.so" o="andrew" g="staff" p="33188"/><f n="ide" o="andrew" g="staff" p="16877"><f n=".coqide-gtk2rc" o="andrew" g="staff" p="33188"/><f n="command_windows.cmi" o="andrew" g="staff" p="33188"/><f n="config_lexer.cmi" o="andrew" g="staff" p="33188"/><f n="config_parser.cmi" o="andrew" g="staff" p="33188"/><f n="coq.cmi" o="andrew" g="staff" p="33188"/><f n="coq.png" o="andrew" g="staff" p="33188"/><f n="coq_commands.cmi" o="andrew" g="staff" p="33188"/><f n="coq_lex.cmi" o="andrew" g="staff" p="33188"/><f n="coq_tactics.cmi" o="andrew" g="staff" p="33188"/><f n="coqide.cmi" o="andrew" g="staff" p="33188"/><f n="FAQ" o="andrew" g="staff" p="33188"/><f n="gtk_parsing.cmi" o="andrew" g="staff" p="33188"/><f n="ide.a" o="andrew" g="staff" p="33188"/><f n="ide.cma" o="andrew" g="staff" p="33188"/><f n="ide.cmxa" o="andrew" g="staff" p="33188"/><f n="ideutils.cmi" o="andrew" g="staff" p="33188"/><f n="preferences.cmi" o="andrew" g="staff" p="33188"/><f n="tags.cmi" o="andrew" g="staff" p="33188"/><f n="typed_notebook.cmi" o="andrew" g="staff" p="33188"/><f n="undo.cmi" o="andrew" g="staff" p="33188"/><f n="utf8_convert.cmi" o="andrew" g="staff" p="33188"/><f n="utils" o="andrew" g="staff" p="16877"><f n="config_file.cmi" o="andrew" g="staff" p="33188"/><f n="configwin.cmi" o="andrew" g="staff" p="33188"/><f n="configwin_ihm.cmi" o="andrew" g="staff" p="33188"/><f n="configwin_keys.cmi" o="andrew" g="staff" p="33188"/><f n="configwin_messages.cmi" o="andrew" g="staff" p="33188"/><f n="configwin_types.cmi" o="andrew" g="staff" p="33188"/><f n="editable_cells.cmi" o="andrew" g="staff" p="33188"/><f n="okey.cmi" o="andrew" g="staff" p="33188"/></f></f><f n="interp" o="andrew" g="staff" p="16877"><f n="constrextern.cmi" o="andrew" g="staff" p="33188"/><f n="constrintern.cmi" o="andrew" g="staff" p="33188"/><f n="coqlib.cmi" o="andrew" g="staff" p="33188"/><f n="dumpglob.cmi" o="andrew" g="staff" p="33188"/><f n="genarg.cmi" o="andrew" g="staff" p="33188"/><f n="implicit_quantifiers.cmi" o="andrew" g="staff" p="33188"/><f n="interp.a" o="andrew" g="staff" p="33188"/><f n="interp.cma" o="andrew" g="staff" p="33188"/><f n="interp.cmxa" o="andrew" g="staff" p="33188"/><f n="modintern.cmi" o="andrew" g="staff" p="33188"/><f n="notation.cmi" o="andrew" g="staff" p="33188"/><f n="ppextend.cmi" o="andrew" g="staff" p="33188"/><f n="reserve.cmi" o="andrew" g="staff" p="33188"/><f n="smartlocate.cmi" o="andrew" g="staff" p="33188"/><f n="syntax_def.cmi" o="andrew" g="staff" p="33188"/><f n="topconstr.cmi" o="andrew" g="staff" p="33188"/></f><f n="kernel" o="andrew" g="staff" p="16877"><f n="cbytecodes.cmi" o="andrew" g="staff" p="33188"/><f n="cbytegen.cmi" o="andrew" g="staff" p="33188"/><f n="cemitcodes.cmi" o="andrew" g="staff" p="33188"/><f n="closure.cmi" o="andrew" g="staff" p="33188"/><f n="conv_oracle.cmi" o="andrew" g="staff" p="33188"/><f n="cooking.cmi" o="andrew" g="staff" p="33188"/><f n="copcodes.cmi" o="andrew" g="staff" p="33188"/><f n="csymtable.cmi" o="andrew" g="staff" p="33188"/><f n="declarations.cmi" o="andrew" g="staff" p="33188"/><f n="entries.cmi" o="andrew" g="staff" p="33188"/><f n="environ.cmi" o="andrew" g="staff" p="33188"/><f n="esubst.cmi" o="andrew" g="staff" p="33188"/><f n="indtypes.cmi" o="andrew" g="staff" p="33188"/><f n="inductive.cmi" o="andrew" g="staff" p="33188"/><f n="kernel.a" o="andrew" g="staff" p="33188"/><f n="kernel.cma" o="andrew" g="staff" p="33188"/><f n="kernel.cmxa" o="andrew" g="staff" p="33188"/><f n="mod_subst.cmi" o="andrew" g="staff" p="33188"/><f n="mod_typing.cmi" o="andrew" g="staff" p="33188"/><f n="modops.cmi" o="andrew" g="staff" p="33188"/><f n="names.cmi" o="andrew" g="staff" p="33188"/><f n="pre_env.cmi" o="andrew" g="staff" p="33188"/><f n="reduction.cmi" o="andrew" g="staff" p="33188"/><f n="retroknowledge.cmi" o="andrew" g="staff" p="33188"/><f n="safe_typing.cmi" o="andrew" g="staff" p="33188"/><f n="sign.cmi" o="andrew" g="staff" p="33188"/><f n="subtyping.cmi" o="andrew" g="staff" p="33188"/><f n="term.cmi" o="andrew" g="staff" p="33188"/><f n="term_typing.cmi" o="andrew" g="staff" p="33188"/><f n="type_errors.cmi" o="andrew" g="staff" p="33188"/><f n="typeops.cmi" o="andrew" g="staff" p="33188"/><f n="univ.cmi" o="andrew" g="staff" p="33188"/><f n="vconv.cmi" o="andrew" g="staff" p="33188"/><f n="vm.cmi" o="andrew" g="staff" p="33188"/></f><f n="lib" o="andrew" g="staff" p="16877"><f n="bigint.cmi" o="andrew" g="staff" p="33188"/><f n="bstack.cmi" o="andrew" g="staff" p="33188"/><f n="compat.cmi" o="andrew" g="staff" p="33188"/><f n="dnet.cmi" o="andrew" g="staff" p="33188"/><f n="dyn.cmi" o="andrew" g="staff" p="33188"/><f n="edit.cmi" o="andrew" g="staff" p="33188"/><f n="envars.cmi" o="andrew" g="staff" p="33188"/><f n="explore.cmi" o="andrew" g="staff" p="33188"/><f n="flags.cmi" o="andrew" g="staff" p="33188"/><f n="fmap.cmi" o="andrew" g="staff" p="33188"/><f n="fset.cmi" o="andrew" g="staff" p="33188"/><f n="gmap.cmi" o="andrew" g="staff" p="33188"/><f n="gmapl.cmi" o="andrew" g="staff" p="33188"/><f n="gset.cmi" o="andrew" g="staff" p="33188"/><f n="hashcons.cmi" o="andrew" g="staff" p="33188"/><f n="heap.cmi" o="andrew" g="staff" p="33188"/><f n="lib.a" o="andrew" g="staff" p="33188"/><f n="lib.cma" o="andrew" g="staff" p="33188"/><f n="lib.cmxa" o="andrew" g="staff" p="33188"/><f n="option.cmi" o="andrew" g="staff" p="33188"/><f n="pp.cmi" o="andrew" g="staff" p="33188"/><f n="pp_control.cmi" o="andrew" g="staff" p="33188"/><f n="predicate.cmi" o="andrew" g="staff" p="33188"/><f n="profile.cmi" o="andrew" g="staff" p="33188"/><f n="rtree.cmi" o="andrew" g="staff" p="33188"/><f n="segmenttree.cmi" o="andrew" g="staff" p="33188"/><f n="system.cmi" o="andrew" g="staff" p="33188"/><f n="tlm.cmi" o="andrew" g="staff" p="33188"/><f n="tries.cmi" o="andrew" g="staff" p="33188"/><f n="unicodetable.cmi" o="andrew" g="staff" p="33188"/><f n="util.cmi" o="andrew" g="staff" p="33188"/></f><f n="libcoqrun.a" o="andrew" g="staff" p="33188"/><f n="library" o="andrew" g="staff" p="16877"><f n="decl_kinds.cmi" o="andrew" g="staff" p="33188"/><f n="declare.cmi" o="andrew" g="staff" p="33188"/><f n="declaremods.cmi" o="andrew" g="staff" p="33188"/><f n="decls.cmi" o="andrew" g="staff" p="33188"/><f n="dischargedhypsmap.cmi" o="andrew" g="staff" p="33188"/><f n="global.cmi" o="andrew" g="staff" p="33188"/><f n="goptions.cmi" o="andrew" g="staff" p="33188"/><f n="heads.cmi" o="andrew" g="staff" p="33188"/><f n="impargs.cmi" o="andrew" g="staff" p="33188"/><f n="lib.cmi" o="andrew" g="staff" p="33188"/><f n="libnames.cmi" o="andrew" g="staff" p="33188"/><f n="libobject.cmi" o="andrew" g="staff" p="33188"/><f n="library.a" o="andrew" g="staff" p="33188"/><f n="library.cma" o="andrew" g="staff" p="33188"/><f n="library.cmi" o="andrew" g="staff" p="33188"/><f n="library.cmxa" o="andrew" g="staff" p="33188"/><f n="nameops.cmi" o="andrew" g="staff" p="33188"/><f n="nametab.cmi" o="andrew" g="staff" p="33188"/><f n="states.cmi" o="andrew" g="staff" p="33188"/><f n="summary.cmi" o="andrew" g="staff" p="33188"/></f><f n="parsing" o="andrew" g="staff" p="16877"><f n="egrammar.cmi" o="andrew" g="staff" p="33188"/><f n="extend.cmi" o="andrew" g="staff" p="33188"/><f n="extrawit.cmi" o="andrew" g="staff" p="33188"/><f n="g_constr.cmi" o="andrew" g="staff" p="33188"/><f n="g_decl_mode.cmi" o="andrew" g="staff" p="33188"/><f n="g_ltac.cmi" o="andrew" g="staff" p="33188"/><f n="g_prim.cmi" o="andrew" g="staff" p="33188"/><f n="g_proofs.cmi" o="andrew" g="staff" p="33188"/><f n="g_tactic.cmi" o="andrew" g="staff" p="33188"/><f n="g_vernac.cmi" o="andrew" g="staff" p="33188"/><f n="g_xml.cmi" o="andrew" g="staff" p="33188"/><f n="grammar.cma" o="andrew" g="staff" p="33188"/><f n="highparsing.a" o="andrew" g="staff" p="33188"/><f n="highparsing.cma" o="andrew" g="staff" p="33188"/><f n="highparsing.cmxa" o="andrew" g="staff" p="33188"/><f n="lexer.cmi" o="andrew" g="staff" p="33188"/><f n="parsing.a" o="andrew" g="staff" p="33188"/><f n="parsing.cma" o="andrew" g="staff" p="33188"/><f n="parsing.cmxa" o="andrew" g="staff" p="33188"/><f n="pcoq.cmi" o="andrew" g="staff" p="33188"/><f n="ppconstr.cmi" o="andrew" g="staff" p="33188"/><f n="ppdecl_proof.cmi" o="andrew" g="staff" p="33188"/><f n="pptactic.cmi" o="andrew" g="staff" p="33188"/><f n="ppvernac.cmi" o="andrew" g="staff" p="33188"/><f n="prettyp.cmi" o="andrew" g="staff" p="33188"/><f n="printer.cmi" o="andrew" g="staff" p="33188"/><f n="printmod.cmi" o="andrew" g="staff" p="33188"/><f n="tactic_printer.cmi" o="andrew" g="staff" p="33188"/></f><f n="plugins" o="andrew" g="staff" p="16877"><f n="cc" o="andrew" g="staff" p="16877"><f n="cc_plugin.cma" o="andrew" g="staff" p="33188"/><f n="cc_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="cc_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="ccalgo.cmi" o="andrew" g="staff" p="33188"/><f n="ccproof.cmi" o="andrew" g="staff" p="33188"/><f n="cctac.cmi" o="andrew" g="staff" p="33188"/><f n="g_congruence.cmi" o="andrew" g="staff" p="33188"/></f><f n="dp" o="andrew" g="staff" p="16877"><f n="dp.cmi" o="andrew" g="staff" p="33188"/><f n="Dp.vo" o="andrew" g="staff" p="33188"/><f n="dp_plugin.cma" o="andrew" g="staff" p="33188"/><f n="dp_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="dp_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="dp_why.cmi" o="andrew" g="staff" p="33188"/><f n="dp_zenon.cmi" o="andrew" g="staff" p="33188"/><f n="g_dp.cmi" o="andrew" g="staff" p="33188"/></f><f n="extraction" o="andrew" g="staff" p="16877"><f n="common.cmi" o="andrew" g="staff" p="33188"/><f n="extract_env.cmi" o="andrew" g="staff" p="33188"/><f n="extraction.cmi" o="andrew" g="staff" p="33188"/><f n="extraction_plugin.cma" o="andrew" g="staff" p="33188"/><f n="extraction_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="extraction_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlBasic.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlBigIntConv.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlIntConv.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlNatBigInt.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlNatInt.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlString.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlZBigInt.vo" o="andrew" g="staff" p="33188"/><f n="ExtrOcamlZInt.vo" o="andrew" g="staff" p="33188"/><f n="g_extraction.cmi" o="andrew" g="staff" p="33188"/><f n="haskell.cmi" o="andrew" g="staff" p="33188"/><f n="mlutil.cmi" o="andrew" g="staff" p="33188"/><f n="modutil.cmi" o="andrew" g="staff" p="33188"/><f n="ocaml.cmi" o="andrew" g="staff" p="33188"/><f n="scheme.cmi" o="andrew" g="staff" p="33188"/><f n="table.cmi" o="andrew" g="staff" p="33188"/></f><f n="field" o="andrew" g="staff" p="16877"><f n="field.cmi" o="andrew" g="staff" p="33188"/><f n="field_plugin.cma" o="andrew" g="staff" p="33188"/><f n="field_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="field_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="LegacyField.vo" o="andrew" g="staff" p="33188"/><f n="LegacyField_Compl.vo" o="andrew" g="staff" p="33188"/><f n="LegacyField_Tactic.vo" o="andrew" g="staff" p="33188"/><f n="LegacyField_Theory.vo" o="andrew" g="staff" p="33188"/></f><f n="firstorder" o="andrew" g="staff" p="16877"><f n="formula.cmi" o="andrew" g="staff" p="33188"/><f n="g_ground.cmi" o="andrew" g="staff" p="33188"/><f n="ground.cmi" o="andrew" g="staff" p="33188"/><f n="ground_plugin.cma" o="andrew" g="staff" p="33188"/><f n="ground_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="ground_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="instances.cmi" o="andrew" g="staff" p="33188"/><f n="rules.cmi" o="andrew" g="staff" p="33188"/><f n="sequent.cmi" o="andrew" g="staff" p="33188"/><f n="unify.cmi" o="andrew" g="staff" p="33188"/></f><f n="fourier" o="andrew" g="staff" p="16877"><f n="fourier.cmi" o="andrew" g="staff" p="33188"/><f n="Fourier.vo" o="andrew" g="staff" p="33188"/><f n="fourier_plugin.cma" o="andrew" g="staff" p="33188"/><f n="fourier_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="fourier_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="Fourier_util.vo" o="andrew" g="staff" p="33188"/><f n="fourierR.cmi" o="andrew" g="staff" p="33188"/><f n="g_fourier.cmi" o="andrew" g="staff" p="33188"/></f><f n="funind" o="andrew" g="staff" p="16877"><f n="functional_principles_proofs.cmi" o="andrew" g="staff" p="33188"/><f n="functional_principles_types.cmi" o="andrew" g="staff" p="33188"/><f n="g_indfun.cmi" o="andrew" g="staff" p="33188"/><f n="indfun.cmi" o="andrew" g="staff" p="33188"/><f n="indfun_common.cmi" o="andrew" g="staff" p="33188"/><f n="invfun.cmi" o="andrew" g="staff" p="33188"/><f n="merge.cmi" o="andrew" g="staff" p="33188"/><f n="rawterm_to_relation.cmi" o="andrew" g="staff" p="33188"/><f n="rawtermops.cmi" o="andrew" g="staff" p="33188"/><f n="recdef.cmi" o="andrew" g="staff" p="33188"/><f n="Recdef.vo" o="andrew" g="staff" p="33188"/><f n="recdef_plugin.cma" o="andrew" g="staff" p="33188"/><f n="recdef_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="recdef_plugin_mod.cmi" o="andrew" g="staff" p="33188"/></f><f n="micromega" o="andrew" g="staff" p="16877"><f n="certificate.cmi" o="andrew" g="staff" p="33188"/><f n="CheckerMaker.vo" o="andrew" g="staff" p="33188"/><f n="coq_micromega.cmi" o="andrew" g="staff" p="33188"/><f n="csdpcert" o="andrew" g="staff" p="33261"/><f n="Env.vo" o="andrew" g="staff" p="33188"/><f n="EnvRing.vo" o="andrew" g="staff" p="33188"/><f n="g_micromega.cmi" o="andrew" g="staff" p="33188"/><f n="mfourier.cmi" o="andrew" g="staff" p="33188"/><f n="micromega.cmi" o="andrew" g="staff" p="33188"/><f n="micromega_plugin.cma" o="andrew" g="staff" p="33188"/><f n="micromega_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="micromega_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="mutils.cmi" o="andrew" g="staff" p="33188"/><f n="OrderedRing.vo" o="andrew" g="staff" p="33188"/><f n="persistent_cache.cmi" o="andrew" g="staff" p="33188"/><f n="Psatz.vo" o="andrew" g="staff" p="33188"/><f n="QMicromega.vo" o="andrew" g="staff" p="33188"/><f n="Refl.vo" o="andrew" g="staff" p="33188"/><f n="RingMicromega.vo" o="andrew" g="staff" p="33188"/><f n="RMicromega.vo" o="andrew" g="staff" p="33188"/><f n="sos_types.cmi" o="andrew" g="staff" p="33188"/><f n="Tauto.vo" o="andrew" g="staff" p="33188"/><f n="VarMap.vo" o="andrew" g="staff" p="33188"/><f n="ZCoeff.vo" o="andrew" g="staff" p="33188"/><f n="ZMicromega.vo" o="andrew" g="staff" p="33188"/></f><f n="nsatz" o="andrew" g="staff" p="16877"><f n="ideal.cmi" o="andrew" g="staff" p="33188"/><f n="nsatz.cmi" o="andrew" g="staff" p="33188"/><f n="Nsatz.vo" o="andrew" g="staff" p="33188"/><f n="nsatz_plugin.cma" o="andrew" g="staff" p="33188"/><f n="nsatz_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="nsatz_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="polynom.cmi" o="andrew" g="staff" p="33188"/><f n="utile.cmi" o="andrew" g="staff" p="33188"/></f><f n="omega" o="andrew" g="staff" p="16877"><f n="coq_omega.cmi" o="andrew" g="staff" p="33188"/><f n="g_omega.cmi" o="andrew" g="staff" p="33188"/><f n="omega.cmi" o="andrew" g="staff" p="33188"/><f n="Omega.vo" o="andrew" g="staff" p="33188"/><f n="omega_plugin.cma" o="andrew" g="staff" p="33188"/><f n="omega_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="omega_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="OmegaLemmas.vo" o="andrew" g="staff" p="33188"/><f n="OmegaPlugin.vo" o="andrew" g="staff" p="33188"/><f n="PreOmega.vo" o="andrew" g="staff" p="33188"/></f><f n="quote" o="andrew" g="staff" p="16877"><f n="g_quote.cmi" o="andrew" g="staff" p="33188"/><f n="quote.cmi" o="andrew" g="staff" p="33188"/><f n="Quote.vo" o="andrew" g="staff" p="33188"/><f n="quote_plugin.cma" o="andrew" g="staff" p="33188"/><f n="quote_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="quote_plugin_mod.cmi" o="andrew" g="staff" p="33188"/></f><f n="ring" o="andrew" g="staff" p="16877"><f n="g_ring.cmi" o="andrew" g="staff" p="33188"/><f n="LegacyArithRing.vo" o="andrew" g="staff" p="33188"/><f n="LegacyNArithRing.vo" o="andrew" g="staff" p="33188"/><f n="LegacyRing.vo" o="andrew" g="staff" p="33188"/><f n="LegacyRing_theory.vo" o="andrew" g="staff" p="33188"/><f n="LegacyZArithRing.vo" o="andrew" g="staff" p="33188"/><f n="ring.cmi" o="andrew" g="staff" p="33188"/><f n="Ring_abstract.vo" o="andrew" g="staff" p="33188"/><f n="Ring_normalize.vo" o="andrew" g="staff" p="33188"/><f n="ring_plugin.cma" o="andrew" g="staff" p="33188"/><f n="ring_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="ring_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="Setoid_ring.vo" o="andrew" g="staff" p="33188"/><f n="Setoid_ring_normalize.vo" o="andrew" g="staff" p="33188"/><f n="Setoid_ring_theory.vo" o="andrew" g="staff" p="33188"/></f><f n="romega" o="andrew" g="staff" p="16877"><f n="const_omega.cmi" o="andrew" g="staff" p="33188"/><f n="g_romega.cmi" o="andrew" g="staff" p="33188"/><f n="refl_omega.cmi" o="andrew" g="staff" p="33188"/><f n="ReflOmegaCore.vo" o="andrew" g="staff" p="33188"/><f n="ROmega.vo" o="andrew" g="staff" p="33188"/><f n="romega_plugin.cma" o="andrew" g="staff" p="33188"/><f n="romega_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="romega_plugin_mod.cmi" o="andrew" g="staff" p="33188"/></f><f n="rtauto" o="andrew" g="staff" p="16877"><f n="Bintree.vo" o="andrew" g="staff" p="33188"/><f n="g_rtauto.cmi" o="andrew" g="staff" p="33188"/><f n="proof_search.cmi" o="andrew" g="staff" p="33188"/><f n="refl_tauto.cmi" o="andrew" g="staff" p="33188"/><f n="Rtauto.vo" o="andrew" g="staff" p="33188"/><f n="rtauto_plugin.cma" o="andrew" g="staff" p="33188"/><f n="rtauto_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="rtauto_plugin_mod.cmi" o="andrew" g="staff" p="33188"/></f><f n="setoid_ring" o="andrew" g="staff" p="16877"><f n="ArithRing.vo" o="andrew" g="staff" p="33188"/><f n="BinList.vo" o="andrew" g="staff" p="33188"/><f n="Field.vo" o="andrew" g="staff" p="33188"/><f n="Field_tac.vo" o="andrew" g="staff" p="33188"/><f n="Field_theory.vo" o="andrew" g="staff" p="33188"/><f n="InitialRing.vo" o="andrew" g="staff" p="33188"/><f n="NArithRing.vo" o="andrew" g="staff" p="33188"/><f n="newring.cmi" o="andrew" g="staff" p="33188"/><f n="newring_plugin.cma" o="andrew" g="staff" p="33188"/><f n="newring_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="newring_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="RealField.vo" o="andrew" g="staff" p="33188"/><f n="Ring.vo" o="andrew" g="staff" p="33188"/><f n="Ring_base.vo" o="andrew" g="staff" p="33188"/><f n="Ring_equiv.vo" o="andrew" g="staff" p="33188"/><f n="Ring_polynom.vo" o="andrew" g="staff" p="33188"/><f n="Ring_tac.vo" o="andrew" g="staff" p="33188"/><f n="Ring_theory.vo" o="andrew" g="staff" p="33188"/><f n="ZArithRing.vo" o="andrew" g="staff" p="33188"/></f><f n="subtac" o="andrew" g="staff" p="16877"><f n="eterm.cmi" o="andrew" g="staff" p="33188"/><f n="g_subtac.cmi" o="andrew" g="staff" p="33188"/><f n="subtac.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_cases.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_classes.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_coercion.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_command.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_errors.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_obligations.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_plugin.cma" o="andrew" g="staff" p="33188"/><f n="subtac_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="subtac_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_pretyping.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_pretyping_F.cmi" o="andrew" g="staff" p="33188"/><f n="subtac_utils.cmi" o="andrew" g="staff" p="33188"/></f><f n="syntax" o="andrew" g="staff" p="16877"><f n="ascii_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="ascii_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="ascii_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="ascii_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="nat_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="nat_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="nat_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="nat_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="numbers_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="numbers_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="numbers_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="numbers_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="r_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="r_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="r_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="r_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="string_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="string_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="string_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="string_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="z_syntax.cmi" o="andrew" g="staff" p="33188"/><f n="z_syntax_plugin.cma" o="andrew" g="staff" p="33188"/><f n="z_syntax_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="z_syntax_plugin_mod.cmi" o="andrew" g="staff" p="33188"/></f><f n="xml" o="andrew" g="staff" p="16877"><f n="acic.cmi" o="andrew" g="staff" p="33188"/><f n="acic2Xml.cmi" o="andrew" g="staff" p="33188"/><f n="cic2acic.cmi" o="andrew" g="staff" p="33188"/><f n="cic2Xml.cmi" o="andrew" g="staff" p="33188"/><f n="doubleTypeInference.cmi" o="andrew" g="staff" p="33188"/><f n="dumptree.cmi" o="andrew" g="staff" p="33188"/><f n="proof2aproof.cmi" o="andrew" g="staff" p="33188"/><f n="proofTree2Xml.cmi" o="andrew" g="staff" p="33188"/><f n="unshare.cmi" o="andrew" g="staff" p="33188"/><f n="xml.cmi" o="andrew" g="staff" p="33188"/><f n="xml_plugin.cma" o="andrew" g="staff" p="33188"/><f n="xml_plugin.cmxs" o="andrew" g="staff" p="33188"/><f n="xml_plugin_mod.cmi" o="andrew" g="staff" p="33188"/><f n="xmlcommand.cmi" o="andrew" g="staff" p="33188"/><f n="xmlentries.cmi" o="andrew" g="staff" p="33188"/></f></f><f n="pretyping" o="andrew" g="staff" p="16877"><f n="cases.cmi" o="andrew" g="staff" p="33188"/><f n="cbv.cmi" o="andrew" g="staff" p="33188"/><f n="classops.cmi" o="andrew" g="staff" p="33188"/><f n="clenv.cmi" o="andrew" g="staff" p="33188"/><f n="coercion.cmi" o="andrew" g="staff" p="33188"/><f n="detyping.cmi" o="andrew" g="staff" p="33188"/><f n="evarconv.cmi" o="andrew" g="staff" p="33188"/><f n="evarutil.cmi" o="andrew" g="staff" p="33188"/><f n="evd.cmi" o="andrew" g="staff" p="33188"/><f n="indrec.cmi" o="andrew" g="staff" p="33188"/><f n="inductiveops.cmi" o="andrew" g="staff" p="33188"/><f n="matching.cmi" o="andrew" g="staff" p="33188"/><f n="namegen.cmi" o="andrew" g="staff" p="33188"/><f n="pattern.cmi" o="andrew" g="staff" p="33188"/><f n="pretype_errors.cmi" o="andrew" g="staff" p="33188"/><f n="pretyping.a" o="andrew" g="staff" p="33188"/><f n="pretyping.cma" o="andrew" g="staff" p="33188"/><f n="pretyping.cmi" o="andrew" g="staff" p="33188"/><f n="pretyping.cmxa" o="andrew" g="staff" p="33188"/><f n="rawterm.cmi" o="andrew" g="staff" p="33188"/><f n="recordops.cmi" o="andrew" g="staff" p="33188"/><f n="reductionops.cmi" o="andrew" g="staff" p="33188"/><f n="retyping.cmi" o="andrew" g="staff" p="33188"/><f n="tacred.cmi" o="andrew" g="staff" p="33188"/><f n="term_dnet.cmi" o="andrew" g="staff" p="33188"/><f n="termops.cmi" o="andrew" g="staff" p="33188"/><f n="typeclasses.cmi" o="andrew" g="staff" p="33188"/><f n="typeclasses_errors.cmi" o="andrew" g="staff" p="33188"/><f n="typing.cmi" o="andrew" g="staff" p="33188"/><f n="unification.cmi" o="andrew" g="staff" p="33188"/><f n="vnorm.cmi" o="andrew" g="staff" p="33188"/></f><f n="proofs" o="andrew" g="staff" p="16877"><f n="clenvtac.cmi" o="andrew" g="staff" p="33188"/><f n="decl_mode.cmi" o="andrew" g="staff" p="33188"/><f n="evar_refiner.cmi" o="andrew" g="staff" p="33188"/><f n="logic.cmi" o="andrew" g="staff" p="33188"/><f n="pfedit.cmi" o="andrew" g="staff" p="33188"/><f n="proof_trees.cmi" o="andrew" g="staff" p="33188"/><f n="proof_type.cmi" o="andrew" g="staff" p="33188"/><f n="proofs.a" o="andrew" g="staff" p="33188"/><f n="proofs.cma" o="andrew" g="staff" p="33188"/><f n="proofs.cmxa" o="andrew" g="staff" p="33188"/><f n="redexpr.cmi" o="andrew" g="staff" p="33188"/><f n="refiner.cmi" o="andrew" g="staff" p="33188"/><f n="tacexpr.cmi" o="andrew" g="staff" p="33188"/><f n="tacmach.cmi" o="andrew" g="staff" p="33188"/><f n="tactic_debug.cmi" o="andrew" g="staff" p="33188"/></f><f n="states" o="andrew" g="staff" p="16877"><f n="initial.coq" o="andrew" g="staff" p="33188"/></f><f n="tactics" o="andrew" g="staff" p="16877"><f n="auto.cmi" o="andrew" g="staff" p="33188"/><f n="autorewrite.cmi" o="andrew" g="staff" p="33188"/><f n="btermdn.cmi" o="andrew" g="staff" p="33188"/><f n="class_tactics.cmi" o="andrew" g="staff" p="33188"/><f n="contradiction.cmi" o="andrew" g="staff" p="33188"/><f n="decl_interp.cmi" o="andrew" g="staff" p="33188"/><f n="decl_proof_instr.cmi" o="andrew" g="staff" p="33188"/><f n="dhyp.cmi" o="andrew" g="staff" p="33188"/><f n="dn.cmi" o="andrew" g="staff" p="33188"/><f n="eauto.cmi" o="andrew" g="staff" p="33188"/><f n="elim.cmi" o="andrew" g="staff" p="33188"/><f n="elimschemes.cmi" o="andrew" g="staff" p="33188"/><f n="eqdecide.cmi" o="andrew" g="staff" p="33188"/><f n="eqschemes.cmi" o="andrew" g="staff" p="33188"/><f n="equality.cmi" o="andrew" g="staff" p="33188"/><f n="evar_tactics.cmi" o="andrew" g="staff" p="33188"/><f n="extraargs.cmi" o="andrew" g="staff" p="33188"/><f n="extratactics.cmi" o="andrew" g="staff" p="33188"/><f n="hiddentac.cmi" o="andrew" g="staff" p="33188"/><f n="hightactics.a" o="andrew" g="staff" p="33188"/><f n="hightactics.cma" o="andrew" g="staff" p="33188"/><f n="hightactics.cmxa" o="andrew" g="staff" p="33188"/><f n="hipattern.cmi" o="andrew" g="staff" p="33188"/><f n="inv.cmi" o="andrew" g="staff" p="33188"/><f n="leminv.cmi" o="andrew" g="staff" p="33188"/><f n="nbtermdn.cmi" o="andrew" g="staff" p="33188"/><f n="refine.cmi" o="andrew" g="staff" p="33188"/><f n="rewrite.cmi" o="andrew" g="staff" p="33188"/><f n="tacinterp.cmi" o="andrew" g="staff" p="33188"/><f n="tactic_option.cmi" o="andrew" g="staff" p="33188"/><f n="tacticals.cmi" o="andrew" g="staff" p="33188"/><f n="tactics.a" o="andrew" g="staff" p="33188"/><f n="tactics.cma" o="andrew" g="staff" p="33188"/><f n="tactics.cmi" o="andrew" g="staff" p="33188"/><f n="tactics.cmxa" o="andrew" g="staff" p="33188"/><f n="tauto.cmi" o="andrew" g="staff" p="33188"/><f n="termdn.cmi" o="andrew" g="staff" p="33188"/></f><f n="theories" o="andrew" g="staff" p="16877"><f n="Arith" o="andrew" g="staff" p="16877"><f n="Arith.vo" o="andrew" g="staff" p="33188"/><f n="Arith_base.vo" o="andrew" g="staff" p="33188"/><f n="Between.vo" o="andrew" g="staff" p="33188"/><f n="Bool_nat.vo" o="andrew" g="staff" p="33188"/><f n="Compare.vo" o="andrew" g="staff" p="33188"/><f n="Compare_dec.vo" o="andrew" g="staff" p="33188"/><f n="Div2.vo" o="andrew" g="staff" p="33188"/><f n="EqNat.vo" o="andrew" g="staff" p="33188"/><f n="Euclid.vo" o="andrew" g="staff" p="33188"/><f n="Even.vo" o="andrew" g="staff" p="33188"/><f n="Factorial.vo" o="andrew" g="staff" p="33188"/><f n="Gt.vo" o="andrew" g="staff" p="33188"/><f n="Le.vo" o="andrew" g="staff" p="33188"/><f n="Lt.vo" o="andrew" g="staff" p="33188"/><f n="Max.vo" o="andrew" g="staff" p="33188"/><f n="Min.vo" o="andrew" g="staff" p="33188"/><f n="MinMax.vo" o="andrew" g="staff" p="33188"/><f n="Minus.vo" o="andrew" g="staff" p="33188"/><f n="Mult.vo" o="andrew" g="staff" p="33188"/><f n="NatOrderedType.vo" o="andrew" g="staff" p="33188"/><f n="Peano_dec.vo" o="andrew" g="staff" p="33188"/><f n="Plus.vo" o="andrew" g="staff" p="33188"/><f n="Wf_nat.vo" o="andrew" g="staff" p="33188"/></f><f n="Bool" o="andrew" g="staff" p="16877"><f n="Bool.vo" o="andrew" g="staff" p="33188"/><f n="BoolEq.vo" o="andrew" g="staff" p="33188"/><f n="Bvector.vo" o="andrew" g="staff" p="33188"/><f n="DecBool.vo" o="andrew" g="staff" p="33188"/><f n="IfProp.vo" o="andrew" g="staff" p="33188"/><f n="Sumbool.vo" o="andrew" g="staff" p="33188"/><f n="Zerob.vo" o="andrew" g="staff" p="33188"/></f><f n="Classes" o="andrew" g="staff" p="16877"><f n="Equivalence.vo" o="andrew" g="staff" p="33188"/><f n="EquivDec.vo" o="andrew" g="staff" p="33188"/><f n="Init.vo" o="andrew" g="staff" p="33188"/><f n="Morphisms.vo" o="andrew" g="staff" p="33188"/><f n="Morphisms_Prop.vo" o="andrew" g="staff" p="33188"/><f n="Morphisms_Relations.vo" o="andrew" g="staff" p="33188"/><f n="RelationClasses.vo" o="andrew" g="staff" p="33188"/><f n="RelationPairs.vo" o="andrew" g="staff" p="33188"/><f n="SetoidClass.vo" o="andrew" g="staff" p="33188"/><f n="SetoidDec.vo" o="andrew" g="staff" p="33188"/><f n="SetoidTactics.vo" o="andrew" g="staff" p="33188"/></f><f n="FSets" o="andrew" g="staff" p="16877"><f n="FMapAVL.vo" o="andrew" g="staff" p="33188"/><f n="FMapFacts.vo" o="andrew" g="staff" p="33188"/><f n="FMapFullAVL.vo" o="andrew" g="staff" p="33188"/><f n="FMapInterface.vo" o="andrew" g="staff" p="33188"/><f n="FMapList.vo" o="andrew" g="staff" p="33188"/><f n="FMapPositive.vo" o="andrew" g="staff" p="33188"/><f n="FMaps.vo" o="andrew" g="staff" p="33188"/><f n="FMapWeakList.vo" o="andrew" g="staff" p="33188"/><f n="FSetAVL.vo" o="andrew" g="staff" p="33188"/><f n="FSetBridge.vo" o="andrew" g="staff" p="33188"/><f n="FSetCompat.vo" o="andrew" g="staff" p="33188"/><f n="FSetDecide.vo" o="andrew" g="staff" p="33188"/><f n="FSetEqProperties.vo" o="andrew" g="staff" p="33188"/><f n="FSetFacts.vo" o="andrew" g="staff" p="33188"/><f n="FSetInterface.vo" o="andrew" g="staff" p="33188"/><f n="FSetList.vo" o="andrew" g="staff" p="33188"/><f n="FSetPositive.vo" o="andrew" g="staff" p="33188"/><f n="FSetProperties.vo" o="andrew" g="staff" p="33188"/><f n="FSets.vo" o="andrew" g="staff" p="33188"/><f n="FSetToFiniteSet.vo" o="andrew" g="staff" p="33188"/><f n="FSetWeakList.vo" o="andrew" g="staff" p="33188"/></f><f n="Init" o="andrew" g="staff" p="16877"><f n="Datatypes.vo" o="andrew" g="staff" p="33188"/><f n="Logic.vo" o="andrew" g="staff" p="33188"/><f n="Logic_Type.vo" o="andrew" g="staff" p="33188"/><f n="Notations.vo" o="andrew" g="staff" p="33188"/><f n="Peano.vo" o="andrew" g="staff" p="33188"/><f n="Prelude.vo" o="andrew" g="staff" p="33188"/><f n="Specif.vo" o="andrew" g="staff" p="33188"/><f n="Tactics.vo" o="andrew" g="staff" p="33188"/><f n="Wf.vo" o="andrew" g="staff" p="33188"/></f><f n="Lists" o="andrew" g="staff" p="16877"><f n="List.vo" o="andrew" g="staff" p="33188"/><f n="ListSet.vo" o="andrew" g="staff" p="33188"/><f n="ListTactics.vo" o="andrew" g="staff" p="33188"/><f n="SetoidList.vo" o="andrew" g="staff" p="33188"/><f n="StreamMemo.vo" o="andrew" g="staff" p="33188"/><f n="Streams.vo" o="andrew" g="staff" p="33188"/><f n="TheoryList.vo" o="andrew" g="staff" p="33188"/></f><f n="Logic" o="andrew" g="staff" p="16877"><f n="Berardi.vo" o="andrew" g="staff" p="33188"/><f n="ChoiceFacts.vo" o="andrew" g="staff" p="33188"/><f n="Classical.vo" o="andrew" g="staff" p="33188"/><f n="Classical_Pred_Set.vo" o="andrew" g="staff" p="33188"/><f n="Classical_Pred_Type.vo" o="andrew" g="staff" p="33188"/><f n="Classical_Prop.vo" o="andrew" g="staff" p="33188"/><f n="Classical_Type.vo" o="andrew" g="staff" p="33188"/><f n="ClassicalChoice.vo" o="andrew" g="staff" p="33188"/><f n="ClassicalDescription.vo" o="andrew" g="staff" p="33188"/><f n="ClassicalEpsilon.vo" o="andrew" g="staff" p="33188"/><f n="ClassicalFacts.vo" o="andrew" g="staff" p="33188"/><f n="ClassicalUniqueChoice.vo" o="andrew" g="staff" p="33188"/><f n="ConstructiveEpsilon.vo" o="andrew" g="staff" p="33188"/><f n="Decidable.vo" o="andrew" g="staff" p="33188"/><f n="Description.vo" o="andrew" g="staff" p="33188"/><f n="Diaconescu.vo" o="andrew" g="staff" p="33188"/><f n="Epsilon.vo" o="andrew" g="staff" p="33188"/><f n="Eqdep.vo" o="andrew" g="staff" p="33188"/><f n="Eqdep_dec.vo" o="andrew" g="staff" p="33188"/><f n="EqdepFacts.vo" o="andrew" g="staff" p="33188"/><f n="FunctionalExtensionality.vo" o="andrew" g="staff" p="33188"/><f n="Hurkens.vo" o="andrew" g="staff" p="33188"/><f n="IndefiniteDescription.vo" o="andrew" g="staff" p="33188"/><f n="JMeq.vo" o="andrew" g="staff" p="33188"/><f n="ProofIrrelevance.vo" o="andrew" g="staff" p="33188"/><f n="ProofIrrelevanceFacts.vo" o="andrew" g="staff" p="33188"/><f n="RelationalChoice.vo" o="andrew" g="staff" p="33188"/><f n="SetIsType.vo" o="andrew" g="staff" p="33188"/></f><f n="MSets" o="andrew" g="staff" p="16877"><f n="MSetAVL.vo" o="andrew" g="staff" p="33188"/><f n="MSetDecide.vo" o="andrew" g="staff" p="33188"/><f n="MSetEqProperties.vo" o="andrew" g="staff" p="33188"/><f n="MSetFacts.vo" o="andrew" g="staff" p="33188"/><f n="MSetInterface.vo" o="andrew" g="staff" p="33188"/><f n="MSetList.vo" o="andrew" g="staff" p="33188"/><f n="MSetPositive.vo" o="andrew" g="staff" p="33188"/><f n="MSetProperties.vo" o="andrew" g="staff" p="33188"/><f n="MSets.vo" o="andrew" g="staff" p="33188"/><f n="MSetToFiniteSet.vo" o="andrew" g="staff" p="33188"/><f n="MSetWeakList.vo" o="andrew" g="staff" p="33188"/></f><f n="NArith" o="andrew" g="staff" p="16877"><f n="BinNat.vo" o="andrew" g="staff" p="33188"/><f n="BinPos.vo" o="andrew" g="staff" p="33188"/><f n="NArith.vo" o="andrew" g="staff" p="33188"/><f n="Ndec.vo" o="andrew" g="staff" p="33188"/><f n="Ndigits.vo" o="andrew" g="staff" p="33188"/><f n="Ndist.vo" o="andrew" g="staff" p="33188"/><f n="Nminmax.vo" o="andrew" g="staff" p="33188"/><f n="Nnat.vo" o="andrew" g="staff" p="33188"/><f n="NOrderedType.vo" o="andrew" g="staff" p="33188"/><f n="Pminmax.vo" o="andrew" g="staff" p="33188"/><f n="Pnat.vo" o="andrew" g="staff" p="33188"/><f n="POrderedType.vo" o="andrew" g="staff" p="33188"/></f><f n="Numbers" o="andrew" g="staff" p="16877"><f n="BigNumPrelude.vo" o="andrew" g="staff" p="33188"/><f n="Cyclic" o="andrew" g="staff" p="16877"><f n="Abstract" o="andrew" g="staff" p="16877"><f n="CyclicAxioms.vo" o="andrew" g="staff" p="33188"/><f n="NZCyclic.vo" o="andrew" g="staff" p="33188"/></f><f n="DoubleCyclic" o="andrew" g="staff" p="16877"><f n="DoubleAdd.vo" o="andrew" g="staff" p="33188"/><f n="DoubleBase.vo" o="andrew" g="staff" p="33188"/><f n="DoubleCyclic.vo" o="andrew" g="staff" p="33188"/><f n="DoubleDiv.vo" o="andrew" g="staff" p="33188"/><f n="DoubleDivn1.vo" o="andrew" g="staff" p="33188"/><f n="DoubleLift.vo" o="andrew" g="staff" p="33188"/><f n="DoubleMul.vo" o="andrew" g="staff" p="33188"/><f n="DoubleSqrt.vo" o="andrew" g="staff" p="33188"/><f n="DoubleSub.vo" o="andrew" g="staff" p="33188"/><f n="DoubleType.vo" o="andrew" g="staff" p="33188"/></f><f n="Int31" o="andrew" g="staff" p="16877"><f n="Cyclic31.vo" o="andrew" g="staff" p="33188"/><f n="Int31.vo" o="andrew" g="staff" p="33188"/><f n="Ring31.vo" o="andrew" g="staff" p="33188"/></f><f n="ZModulo" o="andrew" g="staff" p="16877"><f n="ZModulo.vo" o="andrew" g="staff" p="33188"/></f></f><f n="Integer" o="andrew" g="staff" p="16877"><f n="Abstract" o="andrew" g="staff" p="16877"><f n="ZAdd.vo" o="andrew" g="staff" p="33188"/><f n="ZAddOrder.vo" o="andrew" g="staff" p="33188"/><f n="ZAxioms.vo" o="andrew" g="staff" p="33188"/><f n="ZBase.vo" o="andrew" g="staff" p="33188"/><f n="ZDivEucl.vo" o="andrew" g="staff" p="33188"/><f n="ZDivFloor.vo" o="andrew" g="staff" p="33188"/><f n="ZDivTrunc.vo" o="andrew" g="staff" p="33188"/><f n="ZLt.vo" o="andrew" g="staff" p="33188"/><f n="ZMul.vo" o="andrew" g="staff" p="33188"/><f n="ZMulOrder.vo" o="andrew" g="staff" p="33188"/><f n="ZProperties.vo" o="andrew" g="staff" p="33188"/><f n="ZSgnAbs.vo" o="andrew" g="staff" p="33188"/></f><f n="BigZ" o="andrew" g="staff" p="16877"><f n="BigZ.vo" o="andrew" g="staff" p="33188"/><f n="ZMake.vo" o="andrew" g="staff" p="33188"/></f><f n="Binary" o="andrew" g="staff" p="16877"><f n="ZBinary.vo" o="andrew" g="staff" p="33188"/></f><f n="NatPairs" o="andrew" g="staff" p="16877"><f n="ZNatPairs.vo" o="andrew" g="staff" p="33188"/></f><f n="SpecViaZ" o="andrew" g="staff" p="16877"><f n="ZSig.vo" o="andrew" g="staff" p="33188"/><f n="ZSigZAxioms.vo" o="andrew" g="staff" p="33188"/></f></f><f n="NaryFunctions.vo" o="andrew" g="staff" p="33188"/><f n="NatInt" o="andrew" g="staff" p="16877"><f n="NZAdd.vo" o="andrew" g="staff" p="33188"/><f n="NZAddOrder.vo" o="andrew" g="staff" p="33188"/><f n="NZAxioms.vo" o="andrew" g="staff" p="33188"/><f n="NZBase.vo" o="andrew" g="staff" p="33188"/><f n="NZDiv.vo" o="andrew" g="staff" p="33188"/><f n="NZDomain.vo" o="andrew" g="staff" p="33188"/><f n="NZMul.vo" o="andrew" g="staff" p="33188"/><f n="NZMulOrder.vo" o="andrew" g="staff" p="33188"/><f n="NZOrder.vo" o="andrew" g="staff" p="33188"/><f n="NZProperties.vo" o="andrew" g="staff" p="33188"/></f><f n="Natural" o="andrew" g="staff" p="16877"><f n="Abstract" o="andrew" g="staff" p="16877"><f n="NAdd.vo" o="andrew" g="staff" p="33188"/><f n="NAddOrder.vo" o="andrew" g="staff" p="33188"/><f n="NAxioms.vo" o="andrew" g="staff" p="33188"/><f n="NBase.vo" o="andrew" g="staff" p="33188"/><f n="NDefOps.vo" o="andrew" g="staff" p="33188"/><f n="NDiv.vo" o="andrew" g="staff" p="33188"/><f n="NIso.vo" o="andrew" g="staff" p="33188"/><f n="NMulOrder.vo" o="andrew" g="staff" p="33188"/><f n="NOrder.vo" o="andrew" g="staff" p="33188"/><f n="NProperties.vo" o="andrew" g="staff" p="33188"/><f n="NStrongRec.vo" o="andrew" g="staff" p="33188"/><f n="NSub.vo" o="andrew" g="staff" p="33188"/></f><f n="BigN" o="andrew" g="staff" p="16877"><f n="BigN.vo" o="andrew" g="staff" p="33188"/><f n="Nbasic.vo" o="andrew" g="staff" p="33188"/><f n="NMake.vo" o="andrew" g="staff" p="33188"/><f n="NMake_gen.vo" o="andrew" g="staff" p="33188"/></f><f n="Binary" o="andrew" g="staff" p="16877"><f n="NBinary.vo" o="andrew" g="staff" p="33188"/></f><f n="Peano" o="andrew" g="staff" p="16877"><f n="NPeano.vo" o="andrew" g="staff" p="33188"/></f><f n="SpecViaZ" o="andrew" g="staff" p="16877"><f n="NSig.vo" o="andrew" g="staff" p="33188"/><f n="NSigNAxioms.vo" o="andrew" g="staff" p="33188"/></f></f><f n="NumPrelude.vo" o="andrew" g="staff" p="33188"/><f n="Rational" o="andrew" g="staff" p="16877"><f n="BigQ" o="andrew" g="staff" p="16877"><f n="BigQ.vo" o="andrew" g="staff" p="33188"/><f n="QMake.vo" o="andrew" g="staff" p="33188"/></f><f n="SpecViaQ" o="andrew" g="staff" p="16877"><f n="QSig.vo" o="andrew" g="staff" p="33188"/></f></f></f><f n="Program" o="andrew" g="staff" p="16877"><f n="Basics.vo" o="andrew" g="staff" p="33188"/><f n="Combinators.vo" o="andrew" g="staff" p="33188"/><f n="Equality.vo" o="andrew" g="staff" p="33188"/><f n="Program.vo" o="andrew" g="staff" p="33188"/><f n="Subset.vo" o="andrew" g="staff" p="33188"/><f n="Syntax.vo" o="andrew" g="staff" p="33188"/><f n="Tactics.vo" o="andrew" g="staff" p="33188"/><f n="Utils.vo" o="andrew" g="staff" p="33188"/><f n="Wf.vo" o="andrew" g="staff" p="33188"/></f><f n="QArith" o="andrew" g="staff" p="16877"><f n="Qabs.vo" o="andrew" g="staff" p="33188"/><f n="QArith.vo" o="andrew" g="staff" p="33188"/><f n="QArith_base.vo" o="andrew" g="staff" p="33188"/><f n="Qcanon.vo" o="andrew" g="staff" p="33188"/><f n="Qfield.vo" o="andrew" g="staff" p="33188"/><f n="Qminmax.vo" o="andrew" g="staff" p="33188"/><f n="QOrderedType.vo" o="andrew" g="staff" p="33188"/><f n="Qpower.vo" o="andrew" g="staff" p="33188"/><f n="Qreals.vo" o="andrew" g="staff" p="33188"/><f n="Qreduction.vo" o="andrew" g="staff" p="33188"/><f n="Qring.vo" o="andrew" g="staff" p="33188"/><f n="Qround.vo" o="andrew" g="staff" p="33188"/></f><f n="Reals" o="andrew" g="staff" p="16877"><f n="Alembert.vo" o="andrew" g="staff" p="33188"/><f n="AltSeries.vo" o="andrew" g="staff" p="33188"/><f n="ArithProp.vo" o="andrew" g="staff" p="33188"/><f n="Binomial.vo" o="andrew" g="staff" p="33188"/><f n="Cauchy_prod.vo" o="andrew" g="staff" p="33188"/><f n="Cos_plus.vo" o="andrew" g="staff" p="33188"/><f n="Cos_rel.vo" o="andrew" g="staff" p="33188"/><f n="DiscrR.vo" o="andrew" g="staff" p="33188"/><f n="Exp_prop.vo" o="andrew" g="staff" p="33188"/><f n="Integration.vo" o="andrew" g="staff" p="33188"/><f n="LegacyRfield.vo" o="andrew" g="staff" p="33188"/><f n="MVT.vo" o="andrew" g="staff" p="33188"/><f n="NewtonInt.vo" o="andrew" g="staff" p="33188"/><f n="PartSum.vo" o="andrew" g="staff" p="33188"/><f n="PSeries_reg.vo" o="andrew" g="staff" p="33188"/><f n="R_Ifp.vo" o="andrew" g="staff" p="33188"/><f n="R_sqr.vo" o="andrew" g="staff" p="33188"/><f n="R_sqrt.vo" o="andrew" g="staff" p="33188"/><f n="Ranalysis.vo" o="andrew" g="staff" p="33188"/><f n="Ranalysis1.vo" o="andrew" g="staff" p="33188"/><f n="Ranalysis2.vo" o="andrew" g="staff" p="33188"/><f n="Ranalysis3.vo" o="andrew" g="staff" p="33188"/><f n="Ranalysis4.vo" o="andrew" g="staff" p="33188"/><f n="Raxioms.vo" o="andrew" g="staff" p="33188"/><f n="Rbase.vo" o="andrew" g="staff" p="33188"/><f n="Rbasic_fun.vo" o="andrew" g="staff" p="33188"/><f n="Rcomplete.vo" o="andrew" g="staff" p="33188"/><f n="Rdefinitions.vo" o="andrew" g="staff" p="33188"/><f n="Rderiv.vo" o="andrew" g="staff" p="33188"/><f n="Reals.vo" o="andrew" g="staff" p="33188"/><f n="Rfunctions.vo" o="andrew" g="staff" p="33188"/><f n="Rgeom.vo" o="andrew" g="staff" p="33188"/><f n="RiemannInt.vo" o="andrew" g="staff" p="33188"/><f n="RiemannInt_SF.vo" o="andrew" g="staff" p="33188"/><f n="RIneq.vo" o="andrew" g="staff" p="33188"/><f n="Rlimit.vo" o="andrew" g="staff" p="33188"/><f n="RList.vo" o="andrew" g="staff" p="33188"/><f n="Rlogic.vo" o="andrew" g="staff" p="33188"/><f n="Rminmax.vo" o="andrew" g="staff" p="33188"/><f n="ROrderedType.vo" o="andrew" g="staff" p="33188"/><f n="Rpow_def.vo" o="andrew" g="staff" p="33188"/><f n="Rpower.vo" o="andrew" g="staff" p="33188"/><f n="Rprod.vo" o="andrew" g="staff" p="33188"/><f n="Rseries.vo" o="andrew" g="staff" p="33188"/><f n="Rsigma.vo" o="andrew" g="staff" p="33188"/><f n="Rsqrt_def.vo" o="andrew" g="staff" p="33188"/><f n="Rtopology.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo_alt.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo_calc.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo_def.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo_fun.vo" o="andrew" g="staff" p="33188"/><f n="Rtrigo_reg.vo" o="andrew" g="staff" p="33188"/><f n="SeqProp.vo" o="andrew" g="staff" p="33188"/><f n="SeqSeries.vo" o="andrew" g="staff" p="33188"/><f n="SplitAbsolu.vo" o="andrew" g="staff" p="33188"/><f n="SplitRmult.vo" o="andrew" g="staff" p="33188"/><f n="Sqrt_reg.vo" o="andrew" g="staff" p="33188"/></f><f n="Relations" o="andrew" g="staff" p="16877"><f n="Operators_Properties.vo" o="andrew" g="staff" p="33188"/><f n="Relation_Definitions.vo" o="andrew" g="staff" p="33188"/><f n="Relation_Operators.vo" o="andrew" g="staff" p="33188"/><f n="Relations.vo" o="andrew" g="staff" p="33188"/></f><f n="Setoids" o="andrew" g="staff" p="16877"><f n="Setoid.vo" o="andrew" g="staff" p="33188"/></f><f n="Sets" o="andrew" g="staff" p="16877"><f n="Classical_sets.vo" o="andrew" g="staff" p="33188"/><f n="Constructive_sets.vo" o="andrew" g="staff" p="33188"/><f n="Cpo.vo" o="andrew" g="staff" p="33188"/><f n="Ensembles.vo" o="andrew" g="staff" p="33188"/><f n="Finite_sets.vo" o="andrew" g="staff" p="33188"/><f n="Finite_sets_facts.vo" o="andrew" g="staff" p="33188"/><f n="Image.vo" o="andrew" g="staff" p="33188"/><f n="Infinite_sets.vo" o="andrew" g="staff" p="33188"/><f n="Integers.vo" o="andrew" g="staff" p="33188"/><f n="Multiset.vo" o="andrew" g="staff" p="33188"/><f n="Partial_Order.vo" o="andrew" g="staff" p="33188"/><f n="Permut.vo" o="andrew" g="staff" p="33188"/><f n="Powerset.vo" o="andrew" g="staff" p="33188"/><f n="Powerset_Classical_facts.vo" o="andrew" g="staff" p="33188"/><f n="Powerset_facts.vo" o="andrew" g="staff" p="33188"/><f n="Relations_1.vo" o="andrew" g="staff" p="33188"/><f n="Relations_1_facts.vo" o="andrew" g="staff" p="33188"/><f n="Relations_2.vo" o="andrew" g="staff" p="33188"/><f n="Relations_2_facts.vo" o="andrew" g="staff" p="33188"/><f n="Relations_3.vo" o="andrew" g="staff" p="33188"/><f n="Relations_3_facts.vo" o="andrew" g="staff" p="33188"/><f n="Uniset.vo" o="andrew" g="staff" p="33188"/></f><f n="Sorting" o="andrew" g="staff" p="16877"><f n="Heap.vo" o="andrew" g="staff" p="33188"/><f n="Mergesort.vo" o="andrew" g="staff" p="33188"/><f n="Permutation.vo" o="andrew" g="staff" p="33188"/><f n="PermutEq.vo" o="andrew" g="staff" p="33188"/><f n="PermutSetoid.vo" o="andrew" g="staff" p="33188"/><f n="Sorted.vo" o="andrew" g="staff" p="33188"/><f n="Sorting.vo" o="andrew" g="staff" p="33188"/></f><f n="Strings" o="andrew" g="staff" p="16877"><f n="Ascii.vo" o="andrew" g="staff" p="33188"/><f n="String.vo" o="andrew" g="staff" p="33188"/></f><f n="Structures" o="andrew" g="staff" p="16877"><f n="DecidableType.vo" o="andrew" g="staff" p="33188"/><f n="DecidableTypeEx.vo" o="andrew" g="staff" p="33188"/><f n="Equalities.vo" o="andrew" g="staff" p="33188"/><f n="EqualitiesFacts.vo" o="andrew" g="staff" p="33188"/><f n="GenericMinMax.vo" o="andrew" g="staff" p="33188"/><f n="OrderedType.vo" o="andrew" g="staff" p="33188"/><f n="OrderedTypeAlt.vo" o="andrew" g="staff" p="33188"/><f n="OrderedTypeEx.vo" o="andrew" g="staff" p="33188"/><f n="Orders.vo" o="andrew" g="staff" p="33188"/><f n="OrdersAlt.vo" o="andrew" g="staff" p="33188"/><f n="OrdersEx.vo" o="andrew" g="staff" p="33188"/><f n="OrdersFacts.vo" o="andrew" g="staff" p="33188"/><f n="OrdersLists.vo" o="andrew" g="staff" p="33188"/><f n="OrdersTac.vo" o="andrew" g="staff" p="33188"/></f><f n="Unicode" o="andrew" g="staff" p="16877"><f n="Utf8.vo" o="andrew" g="staff" p="33188"/><f n="Utf8_core.vo" o="andrew" g="staff" p="33188"/></f><f n="Wellfounded" o="andrew" g="staff" p="16877"><f n="Disjoint_Union.vo" o="andrew" g="staff" p="33188"/><f n="Inclusion.vo" o="andrew" g="staff" p="33188"/><f n="Inverse_Image.vo" o="andrew" g="staff" p="33188"/><f n="Lexicographic_Exponentiation.vo" o="andrew" g="staff" p="33188"/><f n="Lexicographic_Product.vo" o="andrew" g="staff" p="33188"/><f n="Transitive_Closure.vo" o="andrew" g="staff" p="33188"/><f n="Union.vo" o="andrew" g="staff" p="33188"/><f n="Well_Ordering.vo" o="andrew" g="staff" p="33188"/><f n="Wellfounded.vo" o="andrew" g="staff" p="33188"/></f><f n="ZArith" o="andrew" g="staff" p="16877"><f n="auxiliary.vo" o="andrew" g="staff" p="33188"/><f n="BinInt.vo" o="andrew" g="staff" p="33188"/><f n="Int.vo" o="andrew" g="staff" p="33188"/><f n="Wf_Z.vo" o="andrew" g="staff" p="33188"/><f n="Zabs.vo" o="andrew" g="staff" p="33188"/><f n="ZArith.vo" o="andrew" g="staff" p="33188"/><f n="ZArith_base.vo" o="andrew" g="staff" p="33188"/><f n="ZArith_dec.vo" o="andrew" g="staff" p="33188"/><f n="Zbool.vo" o="andrew" g="staff" p="33188"/><f n="Zcompare.vo" o="andrew" g="staff" p="33188"/><f n="Zcomplements.vo" o="andrew" g="staff" p="33188"/><f n="Zdigits.vo" o="andrew" g="staff" p="33188"/><f n="Zdiv.vo" o="andrew" g="staff" p="33188"/><f n="Zeven.vo" o="andrew" g="staff" p="33188"/><f n="Zgcd_alt.vo" o="andrew" g="staff" p="33188"/><f n="Zhints.vo" o="andrew" g="staff" p="33188"/><f n="Zlogarithm.vo" o="andrew" g="staff" p="33188"/><f n="Zmax.vo" o="andrew" g="staff" p="33188"/><f n="Zmin.vo" o="andrew" g="staff" p="33188"/><f n="Zminmax.vo" o="andrew" g="staff" p="33188"/><f n="Zmisc.vo" o="andrew" g="staff" p="33188"/><f n="Znat.vo" o="andrew" g="staff" p="33188"/><f n="Znumtheory.vo" o="andrew" g="staff" p="33188"/><f n="ZOdiv.vo" o="andrew" g="staff" p="33188"/><f n="ZOdiv_def.vo" o="andrew" g="staff" p="33188"/><f n="Zorder.vo" o="andrew" g="staff" p="33188"/><f n="ZOrderedType.vo" o="andrew" g="staff" p="33188"/><f n="Zpow_def.vo" o="andrew" g="staff" p="33188"/><f n="Zpow_facts.vo" o="andrew" g="staff" p="33188"/><f n="Zpower.vo" o="andrew" g="staff" p="33188"/><f n="Zsqrt.vo" o="andrew" g="staff" p="33188"/><f n="Zwf.vo" o="andrew" g="staff" p="33188"/></f></f><f n="tools" o="andrew" g="staff" p="16877"><f n="coqdoc" o="andrew" g="staff" p="16877"><f n="coqdoc.css" o="andrew" g="staff" p="33188"/><f n="coqdoc.sty" o="andrew" g="staff" p="33188"/></f></f><f n="toplevel" o="andrew" g="staff" p="16877"><f n="auto_ind_decl.cmi" o="andrew" g="staff" p="33188"/><f n="autoinstance.cmi" o="andrew" g="staff" p="33188"/><f n="cerrors.cmi" o="andrew" g="staff" p="33188"/><f n="class.cmi" o="andrew" g="staff" p="33188"/><f n="classes.cmi" o="andrew" g="staff" p="33188"/><f n="command.cmi" o="andrew" g="staff" p="33188"/><f n="coqinit.cmi" o="andrew" g="staff" p="33188"/><f n="coqtop.cmi" o="andrew" g="staff" p="33188"/><f n="discharge.cmi" o="andrew" g="staff" p="33188"/><f n="himsg.cmi" o="andrew" g="staff" p="33188"/><f n="ind_tables.cmi" o="andrew" g="staff" p="33188"/><f n="indschemes.cmi" o="andrew" g="staff" p="33188"/><f n="lemmas.cmi" o="andrew" g="staff" p="33188"/><f n="libtypes.cmi" o="andrew" g="staff" p="33188"/><f n="metasyntax.cmi" o="andrew" g="staff" p="33188"/><f n="mltop.cmi" o="andrew" g="staff" p="33188"/><f n="record.cmi" o="andrew" g="staff" p="33188"/><f n="search.cmi" o="andrew" g="staff" p="33188"/><f n="toplevel.a" o="andrew" g="staff" p="33188"/><f n="toplevel.cma" o="andrew" g="staff" p="33188"/><f n="toplevel.cmi" o="andrew" g="staff" p="33188"/><f n="toplevel.cmxa" o="andrew" g="staff" p="33188"/><f n="usage.cmi" o="andrew" g="staff" p="33188"/><f n="vernac.cmi" o="andrew" g="staff" p="33188"/><f n="vernacentries.cmi" o="andrew" g="staff" p="33188"/><f n="vernacexpr.cmi" o="andrew" g="staff" p="33188"/><f n="vernacinterp.cmi" o="andrew" g="staff" p="33188"/><f n="whelp.cmi" o="andrew" g="staff" p="33188"/></f><f n="user-contrib" o="andrew" g="staff" p="16877"/></f><f n="libatk-1.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libcairo.2.dylib" o="andrew" g="staff" p="33261"/><f n="libexpat.1.dylib" o="andrew" g="staff" p="33261"/><f n="libfontconfig.1.dylib" o="andrew" g="staff" p="33261"/><f n="libfreetype.6.dylib" o="andrew" g="staff" p="33261"/><f n="libgdk-quartz-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgdk_pixbuf-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgio-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libglib-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgmodule-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgobject-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgthread-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libgtk-quartz-2.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libintl.8.dylib" o="andrew" g="staff" p="33188"/><f n="libpango-1.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libpangocairo-1.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libpangoft2-1.0.0.dylib" o="andrew" g="staff" p="33261"/><f n="libpixman-1.0.dylib" o="andrew" g="staff" p="33261"/><f n="libpng12.0.dylib" o="andrew" g="staff" p="33261"/></f><f n="loaders" o="andrew" g="staff" p="16877"><f n="libpixbufloader-png.so" o="andrew" g="staff" p="33261"/></f><f n="man" o="andrew" g="staff" p="16877"><f n="man1" o="andrew" g="staff" p="16877"><f n="coq-tex.1" o="andrew" g="staff" p="33188"/><f n="coq_makefile.1" o="andrew" g="staff" p="33188"/><f n="coqc.1" o="andrew" g="staff" p="33188"/><f n="coqchk.1" o="andrew" g="staff" p="33188"/><f n="coqdep.1" o="andrew" g="staff" p="33188"/><f n="coqdoc.1" o="andrew" g="staff" p="33188"/><f n="coqide.1" o="andrew" g="staff" p="33188"/><f n="coqmktop.1" o="andrew" g="staff" p="33188"/><f n="coqtop.1" o="andrew" g="staff" p="33188"/><f n="coqtop.byte.1" o="andrew" g="staff" p="33188"/><f n="coqtop.opt.1" o="andrew" g="staff" p="33188"/><f n="coqwc.1" o="andrew" g="staff" p="33188"/><f n="gallina.1" o="andrew" g="staff" p="33188"/></f></f><f n="share" o="andrew" g="staff" p="16877"><f n="emacs" o="andrew" g="staff" p="16877"><f n="site-lisp" o="andrew" g="staff" p="16877"><f n="coq-db.el" o="andrew" g="staff" p="33188"/><f n="coq-font-lock.el" o="andrew" g="staff" p="33188"/><f n="coq-inferior.el" o="andrew" g="staff" p="33188"/><f n="coq-syntax.el" o="andrew" g="staff" p="33188"/><f n="coq.el" o="andrew" g="staff" p="33188"/><f n="coqdoc.sty" o="andrew" g="staff" p="33188"/></f></f></f></f></f></f></pkg-contents>